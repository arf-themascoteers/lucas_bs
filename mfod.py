import numpy as np
from ds_manager import DSManager

def get_mid_bands(size):
    x = np.linspace(0, 4199, size+2)
    x = x[1:-1]
    x = np.round(x)
    return x.astype(int)

selected_bands = {
    8: "678|887|1431|2025|2312|2777|3466|3603",
    16: "412|543|678|915|1186|1394|1807|2025|2136|2218|2631|2922|3467|3472|3669|3990",
    32: "358|400|500|572|596|688|695|981|1000|1214|1287|1438|1620|1723|1933|2139|2190|2419|2505|2507|2576|2653|2957|2964|3467|3469|3604|3604|3642|3643|3644|4184",
    64: "94|289|292|343|374|480|526|577|637|697|716|740|826|826|876|960|981|1043|1157|1165|1227|1335|1416|1525|1534|1598|1848|1874|1875|1937|2018|2032|2152|2153|2255|2259|2276|2392|2445|2652|2653|2655|2668|2781|2789|2981|2975|3042|3047|3128|3480|3489|3499|3505|3575|3581|3652|3675|3676|3952|3955|3979|4027|4158",
    128: "24|26|27|100|115|203|265|274|277|320|339|391|393|406|495|526|597|609|624|625|663|711|715|789|793|813|814|837|937|950|956|1017|1028|1044|1056|1142|1168|1240|1267|1329|1365|1368|1418|1428|1429|1485|1539|1575|1581|1605|1620|1742|1758|1760|1806|1812|1812|1849|1912|1995|1995|1999|2007|2065|2136|2143|2144|2184|2188|2253|2307|2323|2471|2473|2479|2528|2535|2539|2569|2589|2597|2635|2701|2702|2771|2780|2786|2850|2881|2957|2965|2972|2987|3079|3096|3128|3130|3159|3184|3185|3310|3383|3386|3387|3392|3397|3480|3480|3495|3540|3608|3607|3650|3655|3677|3768|3775|3793|3794|3843|3927|3958|3958|3961|3961|4004|4120|4162",
    256: "11|26|36|53|65|77|82|87|87|97|100|221|251|295|296|317|325|336|341|360|365|368|376|376|381|419|423|434|453|492|502|526|544|549|556|579|613|620|637|655|671|687|696|701|702|718|763|780|795|801|803|806|825|871|877|885|891|903|936|940|960|960|981|981|1006|1018|1022|1100|1110|1110|1112|1140|1171|1209|1222|1229|1238|1242|1269|1286|1307|1318|1324|1344|1347|1354|1422|1427|1440|1442|1452|1478|1480|1491|1563|1563|1566|1586|1591|1607|1618|1689|1701|1702|1703|1708|1720|1731|1735|1744|1783|1789|1789|1789|1793|1794|1897|1911|1917|1962|2000|2001|2006|2020|2025|2029|2106|2139|2143|2145|2145|2150|2152|2151|2152|2151|2244|2263|2272|2312|2324|2347|2348|2354|2358|2364|2367|2374|2375|2386|2402|2456|2530|2539|2549|2550|2550|2555|2564|2568|2579|2586|2651|2652|2656|2696|2700|2709|2712|2716|2716|2726|2836|2855|2904|2909|2922|2925|2922|2920|2923|2964|2980|2983|2985|3029|3060|3071|3077|3081|3118|3120|3126|3128|3137|3177|3180|3180|3219|3232|3251|3252|3271|3275|3292|3300|3476|3476|3477|3477|3472|3474|3476|3476|3482|3498|3503|3527|3530|3574|3580|3595|3593|3603|3644|3651|3651|3678|3686|3708|3712|3717|3726|3733|3732|3738|3740|3743|3747|3914|3919|3928|3930|3930|3930|3941|3947|3995|4013|4066|4118|4121|4128|4133|4144|4185",
    512: "27|28|36|43|45|48|60|66|92|99|100|102|105|107|109|108|110|113|120|182|190|200|212|217|241|246|255|258|260|267|274|282|295|296|304|313|318|332|336|350|354|357|362|367|370|375|374|378|396|407|409|417|469|473|481|486|490|492|491|495|494|498|504|508|522|535|543|544|547|577|581|600|604|607|609|635|640|641|647|657|669|672|699|705|718|720|727|731|733|733|737|736|775|776|779|783|784|786|794|804|822|821|825|831|839|839|860|866|867|879|893|899|913|920|922|926|928|957|961|976|978|978|980|982|990|1000|1007|1021|1027|1029|1036|1043|1049|1058|1075|1090|1098|1106|1122|1122|1137|1145|1189|1192|1193|1195|1198|1204|1212|1223|1241|1244|1254|1269|1270|1274|1275|1282|1283|1291|1302|1302|1312|1317|1329|1328|1332|1333|1343|1369|1374|1379|1389|1396|1418|1420|1426|1452|1465|1468|1472|1474|1478|1483|1484|1497|1529|1533|1535|1536|1536|1563|1564|1565|1565|1568|1568|1570|1571|1585|1585|1617|1622|1624|1628|1662|1701|1702|1702|1711|1727|1728|1729|1733|1738|1738|1747|1747|1753|1777|1781|1780|1787|1787|1790|1791|1796|1818|1846|1871|1875|1878|1881|1888|1889|1943|1973|1956|1956|1995|1996|1998|1990|2006|2006|2008|2016|2019|2021|2048|2048|2048|2030|2029|2089|2091|2104|2107|2108|2119|2125|2128|2130|2134|2165|2166|2167|2188|2213|2214|2218|2223|2224|2226|2227|2233|2234|2236|2244|2249|2252|2252|2252|2260|2261|2262|2276|2362|2364|2367|2369|2375|2380|2385|2389|2391|2395|2399|2400|2403|2410|2412|2421|2421|2437|2447|2473|2473|2477|2478|2498|2502|2527|2532|2532|2539|2542|2554|2590|2592|2597|2598|2601|2603|2605|2609|2611|2613|2614|2614|2654|2653|2656|2683|2691|2693|2693|2695|2713|2712|2748|2759|2764|2767|2770|2783|2802|2812|2814|2817|2817|2826|2837|2840|2843|2911|2910|2909|2915|2916|2920|2921|2957|2968|2975|2974|2988|2988|2990|2992|2996|3000|3027|3034|3036|3036|3053|3052|3068|3087|3087|3094|3113|3133|3137|3142|3145|3145|3162|3176|3191|3205|3207|3212|3244|3249|3254|3257|3262|3263|3266|3268|3271|3282|3287|3298|3299|3302|3304|3328|3336|3346|3349|3356|3358|3362|3388|3394|3395|3403|3413|3421|3434|3440|3447|3450|3450|3460|3461|3462|3480|3499|3504|3528|3532|3540|3542|3549|3548|3549|3556|3560|3561|3569|3576|3637|3647|3652|3656|3657|3666|3677|3680|3682|3686|3691|3709|3721|3721|3728|3729|3738|3750|3751|3763|3759|3772|3781|3784|3798|3798|3815|3832|3845|3853|3866|3868|3887|3891|3893|3899|3900|3910|3910|3916|3925|3927|3930|3931|3937|3939|3946|3949|3959|3975|4002|4004|4005|4018|4028|4044|4054|4059|4068|4087|4089|4101|4117|4127|4130|4151|4191"
}

bsdr_bands = {
    8: "542|502|1121|1213|2462|3003|3457|3819",
    16: "467|506|451|482|491|1113|2020|2283|2476|2987|2988|3449|3818|3817",
    32: "381|408|400|402|413|429|471|1123|1115|1120|1357|2019|2461|2383|2428|2453|2464|2983|2982|3068|3070|3458|3616|3820",
    64: "112|356|380|389|386|388|390|415|463|435|533|549|569|1019|992|995|1001|998|1002|1013|1006|1004|1027|1878|1865|2021|2022|2479|2481|2477|2482|2988|2986|2987|2985|3458|3456|3455|3457|3616|3819|3820|4154",
    128: "80|107|391|384|393|387|381|377|370|364|359|376|369|378|383|397|484|471|531|528|536|547|593|582|951|627|628|952|958|934|959|956|976|966|999|996|984|987|983|981|1005|1045|1048|1035|2026|2025|2020|2082|2060|2029|2129|2125|2130|2104|2033|2439|2065|2391|2076|2127|2849|2981|2978|2980|2973|2982|2977|3202|3195|3198|3455|3192|3454|3616|3812|3825|4152|4168",
    256: "51|87|107|382|391|400|399|398|396|390|389|384|383|381|374|376|465|537|528|531|379|370|377|375|527|488|441|521|509|553|563|541|524|560|576|546|578|588|629|617|572|659|601|955|591|968|951|924|988|999|952|960|1007|971|969|980|1016|981|958|1001|979|995|993|991|994|996|1000|1004|1006|1017|1034|1021|1014|1112|1074|1111|1313|1400|1224|1913|1935|1948|1114|1925|1924|1933|1929|2020|2019|2021|2030|2029|2036|2103|2464|2132|2050|2104|2113|2032|2106|2028|2057|2529|2105|2053|2302|2122|2131|2127|2342|3007|2528|2972|2975|2979|2977|2967|2980|2976|2973|2970|2974|3200|3459|3201|3205|3458|3203|3199|3460|3617|3814|3813|3845|3811|3808|4121|4147|4156|4161|4167",
    512: "30|46|59|75|88|99|107|386|395|390|391|387|394|389|393|388|384|383|381|380|377|373|364|358|354|505|361|367|365|375|369|370|374|376|399|396|428|497|534|520|553|535|561|555|562|574|589|584|580|613|590|586|647|618|640|602|665|675|683|733|681|658|642|715|663|686|914|691|654|999|702|917|941|981|689|670|865|925|880|988|947|843|853|927|992|928|859|998|987|993|966|926|946|956|965|962|937|950|908|954|948|1015|976|939|984|968|979|982|959|978|986|1000|1039|995|1007|1005|1004|985|1009|1031|1401|1400|1119|1921|1922|1923|1920|2013|1988|2016|1986|2009|2018|2017|1984|2001|2003|2014|2010|2008|2021|2030|2034|2127|2038|1992|2116|2137|2138|2106|2131|2040|2135|2065|2136|2044|2528|2529|2995|2997|2835|2278|2526|2996|2815|2981|2982|2983|2965|2976|2978|2967|2984|2968|2973|2964|2972|2969|2962|2977|2963|2971|2970|3191|3192|2980|3193|3190|3452|3618|3809|3746|3808|3863|3847|3805|3802|3848|3909|3954|4075|4138|4139|4146|4151|4152|4157|4156|4164|4166|4167"
}

ibs = {}
sbs = {}
bsbs = {}

for key, value in selected_bands.items():
    fd_bands = get_mid_bands(key)
    ibs[key] = fd_bands
    sbs[key] = list(dict.fromkeys([int(i) for i in value.split("|")]))
    bsbs[key] = list(dict.fromkeys([int(i) for i in bsdr_bands[key].split("|")]))

    print(key)
    print(len(ibs[key]))
    print(len(sbs[key]))
    print(len(bsbs[key]))
    print("----")

ds = DSManager(name="lucas",shuffle=False)
data = ds.data[:,0:-1]

fd_res = []
ad_res = []
bsdr_res = []

for key in ibs.keys():
    fd_bands = ibs[key]
    ad_bands = sbs[key]
    bsdr_bands = bsbs[key]

    data_initial = data[:, fd_bands]
    data_final = data[:, ad_bands]
    data_bsdr = data[:, bsdr_bands]

    diff_initial = np.abs(np.diff(data_initial, axis=1))
    diff_final = np.abs(np.diff(data_final, axis=1))
    diff_bsdr = np.abs(np.diff(data_bsdr, axis=1))

    mean_derivative_initial = np.mean(diff_initial)
    mean_derivative_final = np.mean(diff_final)
    mean_derivative_bsdr = np.mean(diff_bsdr)


    fd_res.append(mean_derivative_initial)
    ad_res.append(mean_derivative_final)
    bsdr_res.append(mean_derivative_bsdr)

import matplotlib.pyplot as plt

#plt.plot(fd_res)
plt.plot(ad_res)
plt.plot(bsdr_res)
plt.show()

data_initial = data[:, ibs[512]]
data_final = data[:, sbs[512]]
data_bsdr = data[:, bsbs[512]]

diff_initial = np.mean(data_initial, axis=0)
diff_final = np.mean(data_final, axis=0)
diff_bsdr = np.mean(data_bsdr, axis=0)

# plt.plot(diff_initial)
# plt.plot(diff_final)
# plt.plot(diff_bsdr)
ad_res = [float(i) for i in ad_res]
bsdr_res = [float(i) for i in bsdr_res]
print(ad_res)
print(bsdr_res)
plt.show()

